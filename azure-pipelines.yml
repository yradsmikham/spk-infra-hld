trigger:
  branches:
    include:
    - master

pool:
  vmImage: 'ubuntu-latest'

variables:
  group: 'spk-infra-hld-vg'

steps:
- checkout: self
  persistCredentials: true
  clean: true

# WILL REMOVE LATER. USED UNTIL NEW SPK RELEASE
- task: DownloadPipelineArtifact@2
  inputs:
    buildType: 'specific'
    project: f4a6423c-cb89-4298-a0b1-92c9b08bc694
    definition: 34
    buildVersionToDownload: 'latestFromBranch'
    branchName: 'refs/heads/master'
    itemPattern: "spk*"
    artifactName: 'spk_linux_node_12'
    targetPath: '$(System.DefaultWorkingDirectory)'
- bash: |
    shopt -s expand_aliases
    echo "Current Dir is $(pwd)"
    chmod +x spk-linux
    alias spk="$(pwd)/spk-linux"
    spk --version
  displayName: "Verify SPK downloaded and executable"
  failOnStderr: true

- bash: |
    curl $BEDROCK_BUILD_SCRIPT > build.sh
    chmod +x ./build.sh
  displayName: Download Bedrock orchestration script
  env:
    BEDROCK_BUILD_SCRIPT: https://raw.githubusercontent.com/Microsoft/bedrock/master/gitops/azure-devops/build.sh

- script: |
    dpkg --configure -a
    curl -sL https://aka.ms/InstallAzureCLIDeb | bash
    az --version
  displayName: 'Install az-cli'

- script: |
    . build.sh --source-only
    init
    get_os_spk
    get_spk_version
    download_spk
    echo 'SPK Version: '
    spk --version
    echo "GENERATING ydawgie-azure-single-keyvault"
    cd ydawgie-azure-single-keyvault
    spk infra generate -p west
  displayName: 'SPK'

- script: |
    wget https://releases.hashicorp.com/terraform/$(tf_version)/terraform_$(tf_version)_linux_amd64.zip -q
    unzip -q terraform_$(tf_version)_linux_amd64.zip
    sudo mv terraform /usr/local/bin
    terraform -version
  displayName: 'Install Terraform'

- script: |
    cd $HOME
    cd ydawgie-azure-single-keyvault-generated/west
    terraform init -backend-config=./backend.tfvars
  displayName: 'Terraform init'

- script: |
    cd $HOME
    cd ydawgie-azure-single-keyvault-generated/west
    terraform plan -var-file=./spk.tfvars
  displayName: 'Terraform plan'

- script: |
    git clone $GENERATED_REPO
    cd spk-infra-generated
    rsync -rv --exclude=.terraform $HOME/ydawgie-azure-single-keyvault-generated .

    # Set git identity
    git config user.email "admin@azuredevops.com"
    git config user.name "Automated Account"

    # Following variables have to be set for TeamCity
    export GIT_AUTHOR_NAME="Automated Account"
    export GIT_COMMITTER_NAME="Automated Account"
    export EMAIL="admin@azuredevops.com"

    # Add generated files to repository
    git status
    git add .
    git commit -m "Adding generated components"

    repo_url=$GENERATED_REPO
    repo_url="${repo_url#http://}"
    repo_url="${repo_url#https://}"

    # Git Push
    echo "GIT PUSH: https://<ACCESS_TOKEN_SECRET>@$repo_url"
    git push "https://$ACCESS_TOKEN_SECRET@$repo_url"

  displayName: 'Commit and Push to Generated Repository'
