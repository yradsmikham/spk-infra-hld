trigger:
  branches:
    include:
    - master

pool:
  vmImage: 'ubuntu-latest'

variables:
  group: 'spk-infra-hld-vg'

steps:
- checkout: self
  persistCredentials: true
  clean: true

- bash: |
    curl $BEDROCK_BUILD_SCRIPT > build.sh
    chmod +x ./build.sh
  displayName: Download Bedrock orchestration script
  env:
    BEDROCK_BUILD_SCRIPT: https://raw.githubusercontent.com/Microsoft/bedrock/master/gitops/azure-devops/build.sh

- script: |
    . build.sh --source-only
    init
    get_os_spk
    get_spk_version
    download_spk
    spk --version
      # cp -r ./* "$HOME/"
      #cd "$HOME"
      #echo "DOWNLOADING SPK"
      ##VERSION_TO_DOWNLOAD=$(curl -s "https://api.github.com/repos/CatalystCode/spk/releases/latest" | grep "tag_name" | sed -E 's/.*"([^"]+)".*/\1/')
      #echo "Latest SPK Version: $VERSION_TO_DOWNLOAD"
      #wget "https://github.com/CatalystCode/spk/releases/download/$VERSION_TO_DOWNLOAD/spk-linux"
      #pwd
      #ls
      #chmod 777 spk-linux && mv spk-linux spk
      #export PATH=$PATH:$HOME/spk
      #./spk --version
      #spk --version
  displayName: 'Install SPK tool'

- script: |
    dpkg --configure -a
    curl -sL https://aka.ms/InstallAzureCLIDeb | bash
    az --version
  displayName: 'Install az-cli'

- script: |
    cd find/dev
    spk infra generate -p west
  displayName: 'Run `spk infra generate`'

- script: |
    terraform plan -var-file=./spk.tfvars
  displayName: 'terraform init'

- script: |
    terraform plan -var-file=./spk.tfvars
  displayName: 'terraform plan'

- script: |
    cd find
    git clone $GENERATED_REPO
    cp -r dev-generated spk-infra-generated/find/
    cd spk-infra-generated/find
    git config --global user.email "yvonne.radsmikham@microsoft.com.com"
    git config --global user.name "yvonne.radsmikham"
    git status
    cd dev-generated/west
    git add .
    git commit -m "Adding generated components"
    git push $GENERATED_REPO
  displayName: 'Commit and Push to Generated Repository'
